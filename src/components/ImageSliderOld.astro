---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

const { image1, image2, image3, image4, image5, image1alt, image2alt, image3alt, image4alt, image5alt } = Astro.props;
---

<section class="slider">
    <div class="wrapper">
		<div class="slides">
			<figure id="slide1" class="slide one">
				<input type="radio" class="radio" name="images" id="image1" checked />
				<Image 
					src={image1}
					alt={image1alt}
					id="image1"
					class="slideImage"
				/>
				<label for="image5" class="prev">
					<Icon name="caret-left" size={36} />
				</label>
				<label for="image2" class="next">
					<Icon name="caret-right" size={36} />
				</label>
                <figcaption>{image1alt}</figcaption>
            </figure>
			<figure id="slide2" class="slide two">
				<input type="radio" class="radio" name="images" id="image2" />
                <Image 
					src={image2} 
					alt={image2alt}
					id="image2"
					class="slideImage"
				/>
				<label for="image1" class="prev">
					<Icon name="caret-left" size={36} />
				</label>
				<label for="image3" class="next">
					<Icon name="caret-right" size={36} />
				</label>
                <figcaption>{image2alt}</figcaption>
            </figure>
            <figure id="slide3" class="slide three">
				<input type="radio" class="radio" name="images" id="image3" />
                <Image 
					src={image3} 
					alt={image3alt}
					id="image3"
					class="slideImage" 
				/>
				<label for="image2" class="prev">
					<Icon name="caret-left" size={36} />
				</label>
				<label for="image4" class="next">
					<Icon name="caret-right" size={36} />
				</label>
                <figcaption>{image3alt}</figcaption>
            </figure>
            <figure id="slide4" class="slide four">
				<input type="radio" class="radio" name="images" id="image4" />
                <Image 
					src={image4} 
					alt={image4alt}
					id="image4"
					class="slideImage"
				/>
				<label for="image3" class="prev">
					<Icon name="caret-left" size={36} />
				</label>
				<label for="image5" class="next">
					<Icon name="caret-right" size={36} />
				</label>
                <figcaption>{image4alt}</figcaption>
            </figure>
            <figure id="slide5" class="slide five">
				<input type="radio" class="radio" name="images" id="image5" />
                <Image
					src={image5} 
					alt={image5alt}
					id="image5"
					class="slideImage"
				/>
				<label for="image4" class="prev">
					<Icon name="caret-left" size={36} />
				</label>
				<label for="image1" class="next">
					<Icon name="caret-right" size={36} />
				</label>
                <figcaption>{image5alt}</figcaption>
            </figure>
			<nav id="nav-slides">
				<label for="image1" id="dot1" class="dots">
					<Image
						src={image1} 
						alt={image1alt}
						class="dotImage"
					/></label>
				<label for="image2" id="dot2" class="dots">
					<Image
						src={image2} 
						alt={image2alt}
						class="dotImage"
					/></label>
				<label for="image3" id="dot3" class="dots">
					<Image
						src={image3} 
						alt={image3alt}
						class="dotImage"
					/></label>
				<label for="image4" id="dot4" class="dots">
					<Image
						src={image4} 
						alt={image4alt}
						class="dotImage"
					/></label>
				<label for="image5" id="dot5" class="dots">
					<Image
						src={image5} 
						alt={image5alt}
						class="dotImage"
					/></label>
			</nav>
        </div>
    </div>
</section>

<style>
	.radio {
		position: absolute;
		bottom: 40px;
		opacity: 0.01;
	}
	
	#image1,
	#image2,
	#image3,
	#image4,
	#image5 { accent-color: grey; }

	.slider {
		padding: 0;
		max-width: 33.75rem;
		margin: 1rem auto 0;
		display: grid;
		grid-template-columns: 100%;
		grid-template-rows: auto;
	}

	.wrapper {
		width: inherit;
		position: relative;
		/* grid-column: 1 / 6;
		grid-row: 1 / 6; */
		margin: 0;
		background: var(--background);
	}

	:global(.dark) .wrapper { background: #22201c; }
	
	.slides {
		height: inherit;
		aspect-ratio: 1/1;
		overflow-x: auto;
		overflow-y: hidden;
		white-space: nowrap;
		scroll-behavior: smooth;
		scroll-snap-type: x mandatory;
		gap: 1rem;
		-webkit-overflow-scrolling: touch;
		box-shadow: 0 1.5rem 3rem -0.75rem rgba(0, 0, 0, 0.25);
	}

	.slider .slides::-webkit-scrollbar { display: none; }
	
	.slider .slides {
		scrollbar-width: none;
		-ms-overflow-style: none;
	}
	
	.slider .slide {
		position: relative;
		display: inline-block;
		width: 100%;
		height: 100%;
		scroll-snap-align: start;
		scroll-snap-stop: always;
	}

	figure {
		display: flex;
		flex-direction: column;
	}

	.slideImage {
		width: 100%;
		height: 100%;
	}

	.prev, .next { display: none; }

	.slider .slide figcaption {
		position: absolute;
		display: block;
		/* bottom: 0;
		left: 0; */
		width: 100%;
		max-inline-size: var(--size-content-3);
		font-size: 1.2rem;
		text-align: center;
		color: #e2dbbe;
		background: rgba(0, 0, 0, 0.8);
		padding: .3rem;
		margin: 0;
		white-space: normal;
	}

	#nav-slides {
		position: absolute;
		grid-column: 1 / 6;
		grid-row: 6 / 7;
		display: flex;
		padding: 0 5rem;
	}

	.dots {
		width: 100%;
		aspect-ratio: 1/1;
		border-radius: 50%;
		margin: .5rem;
		overflow: hidden;
		opacity: 0.3;
		filter: saturate(0.3);
		transition: opacity ease 250ms;
		box-shadow: 0 1rem 1rem -0.75rem rgba(0, 0, 0, 0.25);
	}

	.dots.active {
		opacity: 1;
		filter: saturate(1);
	}

	.dots img{
		width: 100%;
		height: 100%;
		object-fit: contain;
	}

	#nav-slides .dots:hover {
		cursor: pointer;
		opacity: 1;
		filter: saturate(1);
		transition: opacity 250ms ease;
	}

	.slide {z-index: 1;}

	#image1:checked ~ .one,
	#imabe2:checked ~ .two,
	#image3:checked ~ .three,
	#image4:checked ~ .four,
	#image5:checked ~ .five 
	{z-index: 9; animation: scroll 1s ease-in-out;}

	
	@media screen  and (min-width: 48rem){
		.slider {
			display: grid;
			grid-template-columns: repeat(5, 1fr);
			grid-template-rows: repeat(5, 1fr) .4fr 1fr;
        }
		
		.wrapper {
			margin: 0;
			grid-column: 1 / 6;
			grid-row: 1 / 6;
			border-radius: 1rem;
		}
		
		.slides {
			
			border-radius: .8rem;
			overflow: hidden;
		}

		[data-icon] {
			color: rgba(224, 150, 0, 1);
		}
		
		/* .slide { z-index: -1; } */

		.prev, .next {
			display: block;
			position: absolute;
			top: 47%;
			z-index: 90;
			cursor: pointer;
		}

		.prev {
			left: 1rem;
		}

		.next {
			right: 1rem;
		}

		figure {
			display: flex;
		}

		figcaption {
			grid-area: 1/6/6/7;
		}

		#nav-slides {
			grid-column: 1 / 6;
			grid-row: 6 / 7;
			display: flex;
			/* padding: 0; */
		}

		.dots {
			width: 100%;
			aspect-ratio: 1/1;
			margin: 2vh;
			border-radius: 50%;
			opacity: 0.6;
			filter: saturate(0.5);
			transition: opacity ease 250ms;
			box-shadow: 0 1rem 1rem -0.75rem rgba(0, 0, 0, 0.25);
		}
	}
</style>

<script>
	document.addEventListener('astro:page-load', () => {
		const list = document.querySelector(".slides");
		const items = Array.from(document.querySelectorAll(".slide"));
		const indicators = Array.from(document.querySelectorAll(".dots"));

		const observer = new IntersectionObserver(onIntersectionObserved, {
			root: list,
			threshold: 0.6
		});

		function onIntersectionObserved(entries) {
			entries.forEach(entry => {
				if (entry.isIntersecting && entry.intersectionRatio >= 0.6) {
					const intersectingIndex = items.indexOf(entry.target);
					activateIndicator(intersectingIndex);
				}
			});
		}

		function activateIndicator(index) {
			indicators.forEach((indicator, i) => {
				indicator.classList.toggle("active", i === index);
			});
		}

		items.forEach(item => observer.observe(item));
	});
</script>